[macro-SpeakingClock-PatSimmons]
; V0.3 - 2012-08-31
;
; Paul Seward, www.paulseward.com
;
; This speaking clock macro uses samples of Pat Simmons, the voice of the GPO
; Speaking clock in the UK (TIM) from 1963 to 1985
; http://en.wikipedia.org/wiki/Pat_Simmons_%28voice_actor%29
;
; Samples should be placed in /usr/share/asterisk/sounds/TIM
;
exten => s,1,Set(tz=Europe/London) ; Change this to be your timezone, see /usr/share/zoneinfo for other options
exten => s,n,Playtones(400*25/400,0/200,400*25/400,0/2000)
; We want to start announcing on a 10second boundary, so work out when the next one is
exten => s,n,Set(FutureTime=$[${EPOCH} + 10])
exten => s,n,Set(FutureTimeMod=$[${FutureTime} % 10])
exten => s,n,Set(SpeakTime=$[${FutureTime} - ${FutureTimeMod}])
exten => s,n,Set(MaxConnectTime=$[${SpeakTime} + 180])
; Spin our heels until it's time to start talking
exten => s,n(tim_countdown_start),GotoIf($[${SpeakTime}-${EPOCH} <= 1]?tim_answer:tim_countdown_wait)
exten => s,n(tim_countdown_wait),wait(1)
exten => s,n,goto(tim_countdown_start)
; Off we go!
exten => s,n(tim_answer),Answer()
exten => s,n,wait(1)
exten => s,n(tim_saytime),Set(SpeakTime=$[${SpeakTime} + 10])
; Work out what time we're announcing
exten => s,n,set(TimHours=${STRFTIME(${SpeakTime},${tz},%I)}) ; Hour in 01-12 form
exten => s,n,set(TimMins=${STRFTIME(${SpeakTime},${tz},%M)})  ; Minute in 00-59 form
exten => s,n,set(TimSecs=${STRFTIME(${SpeakTime},${tz},%S)})  ; Seconds in 00-59 form
; Convert 00 minutes to "oclock"
exten => s,n,set(TimMins=${IF($[ "${TimMins}" = "00"] ? "oclock" : ${TimMins})})
; Convert 00 seconds to "precisely"
exten => s,n,set(TimSecs=${IF($[ "${TimSecs}" = "00"] ? "precisely" : and_${TimSecs}_seconds)})
; Announce the time...
exten => s,n,playback(TIM/at_the_third_stroke_it_will_be)       ; 1.5 second sample
exten => s,n,playback(TIM/${TimHours})                          ; 1.5 second sample
exten => s,n,playback(TIM/${TimMins})                           ; 1.5 second sample
exten => s,n,playback(TIM/${TimSecs})                           ; 2   second sample
exten => s,n,playback(TIM/pips)                                 ; 3.5 second sample - takes us to 10 seconds
; And go back to the start of playback
exten => s,n,GotoIf($[${EPOCH} >= ${MaxConnectTime}]?tim_hangup:tim_saytime)
exten => s,n(tim_hangup),Hangup()

